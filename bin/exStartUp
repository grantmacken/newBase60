#!/usr/bin/env bash
source .env
mkdir -p {build,deploy,tmp}

function dkrPortInUse {
docker ps --format '{{.Ports}}' | grep -oP '^(.+):\K(\d{4})' | grep -oP "$PORT"
}

function dkrStatus {
docker ps --filter name=$CONTAINER --format 'status: {{.Status}}'
}

if [ -n "$(dkrStatus)" ]; then
  echo " - $CONTAINER  up"
  exit
else
  if [ -n "$(dkrPortInUse)" ]; then
    echo " - PORT $PORT is already in use .. "
    echo " - Change .env PORT number"
    echo " - exiting ... "
    exit
  else
    echo " - PORT $PORT is available .. "
  fi
  echo " - start up $CONTAINER"
fi

if [[ -z ${TRAVIS+x} ]]; then 
  if  [[ $USE_DC_OVERRIDE == 'yes'  ]]; then
    # https://docs.docker.com/compose/networking/#using-a-pre-existing-network
    echo ' - USE_DC_OVERRIDE has been set to yes'  
    echo ' - not on travis-ci: using docker overide file'  
    cp no-docker-compose.override.yml docker-compose.override.yml
  else
    # TODO check if conflict
    echo ' - USE_DC_OVERRIDE not set to yes'  
    echo ' - not on travis-ci: not using overide file'  
    [ -e  docker-compose.override.yml ] && rm docker-compose.override.yml
  fi
else
    echo ' - on travis-ci:  not using overide file'  
fi

  docker-compose up -d


#sleep 5
echo ' - WAIT until docker logs say [ Server has started ] '
N=0
until docker logs $CONTAINER | grep -oPq '^.+\KServer has started.+'  2>/dev/null || [ $N -eq 30 ]
 do echo -n $N && sleep $(( N++ ))
done
sleep 1
echo
echo '========================================='
dkrStatus
echo '------------------------------'
sleep 2
IPAddress=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER)
echo -n ' eXist should now be reachable via curl ...'
curl -Is http://${IPAddress}:${PORT}/exist

echo
echo '========================================='
sleep 2
docker logs $CONTAINER | head -n 7 | grep -oP ' - .+$' | tee tmp/startup.log
echo '========================================='
docker logs $CONTAINER | tail -n 7 | grep -oP ' - .+$' | tee -a tmp/startup.log

if [ -s xar.pkgs ]; then
bin/xQpkgs
fi
